@using System.Text.Json
@using System.Security.Claims
@using Microsoft.AspNetCore.Mvc.ModelBinding
@using Microsoft.AspNetCore.Identity
@inject UserManager<User> UserManager

@model IEnumerable<Course>

@{
    var courses = Model;

    var userRoles = new List<string>();
    var authenticatedUser = await UserManager.GetUserAsync(User);

    if (authenticatedUser is not null)
        userRoles = (await UserManager.GetRolesAsync(authenticatedUser)).ToList();
}

<style>
    .shadow {
        box-shadow: rgba(0, 0, 0, 0.1) 0px 4px 12px;
    }

    .round {
        border: 1px solid #d3d3d3;
        border-radius: 15px;
    }

    .courses-action {
        margin-bottom: 100px;
    }

    .courses-create-form {
        width: 500px;
        padding: 30px;
    }

    .main-header {
        margin-bottom: 50px;
    }

    .list-item {
        padding: 30px;
        margin-bottom: 50px;
        font-size: 18px;
    }

    .list-item:last-child {
        margin-bottom: 0px;
    }

    .item-name {
        margin-bottom: 15px;
    }

    .item-desc {
        margin-bottom: 50px;
    }

    .item-lect-amount, .item-date {
        color: #505050;
    }

    .courses-create-form {
        padding: 25px;
    }

</style>

<div>
    @if (userRoles.Contains("Author") || userRoles.Contains("Admin")) {
        <div class="page-functionality">
            <a class="btn btn-dark px-3 btn-lg" asp-route="CourseCreateView">Create Course</a>
        </div>
    }
    <hr>
    <div class="courses-info">
        <div class="main-header">
            <h1>All courses</h1>
        </div>

        <div class="courses-list">
            @foreach (var course in courses)
            {
                <div class="list-item round" id="@course.Id">
                    <div class="d-flex justify-content-between">
                        <div class="info-div">
                            <div class="item-name">
                                <h3>@course?.Name</h3>
                            </div>
                            <div class="item-desc">
                                @course?.Description
                            </div>
                            <div class="item-lect-amount">
                                Amount of lectures: @(course?.AmountOfLectures ?? 0)
                            </div>
                            <div class="item-date mb-4">
                                @(course?.CreationDate.ToString() ?? "UNKNOWN")
                            </div>
                        </div>
                        <div class="image-div">
                            @if (course?.CourseLogoPath != null)
                            {   
                                <div>
                                    <img width="150" height="150" src="Course/Logo/@course.Id" alt="logo">
                                </div>
                            }
                        </div>
                    </div>
                    
                    <a asp-action="Details" asp-controller="Course" asp-route-id="@course?.Id" class="btn btn-secondary btn-dark active item-button px-4">View Details</a>
                    @if (userRoles.Contains("Admin")) {
                        <a href="#" onclick="DeleteCourseHandler(@course.Id)" class="text-danger">Delete</a>
                    }
                </div>
            }
        </div>
    </div>
</div>

<script>
    function DeleteCourseHandler(courseId) {
        fetch('/Course/' + courseId, { method: 'DELETE' })
            .then((response) => {
                if (!response.ok)
                    throw new Error(response.statusText)

                DeleteFeedbackFromDOM(courseId)
                console.log("Course was successfully deleted!")
            })
            .catch((err) => console.log(err.message));
    }

    function DeleteFeedbackFromDOM(courseId) {
        var coursesList = document.querySelector('.courses-list')
        var course = coursesList.querySelector('#' + CSS.escape(courseId))

        if (course) {
            course.remove()
        }
    }
</script>
