@model CourseDetailsViewModel;

@using System.Security.Claims;
@using Microsoft.AspNetCore.Identity
@inject UserManager<User> UserManager

@{
    var details = Model;
    
    var authenticatedUser = await UserManager.GetUserAsync(User);
    var userRoles = new List<string>();

    if (authenticatedUser is not null)
        userRoles = (await UserManager.GetRolesAsync(authenticatedUser)).ToList();

    var isAdmin = userRoles.Contains("Admin");
    var isAuthor = userRoles.Contains("Author");
    var isAuthenticated = authenticatedUser is not null;
}

<style>
    .feedback-form {
        padding: 25px;
        border: 1px solid #d3d3d3;
        border-radius: 15px;
    }

    .list-item {
        border: 1px solid #d3d3d3;
        border-radius: 15px;
        padding: 30px;
    }

    .item-text-info  {
        font-size: 19px;
        overflow: hidden;
    }

    .item-date {
        font-size: 16px;
        color: #303030;
    }

    .item-rating-info {
        font-size: 26px;
    }

    .item-functionality {
        font-size: 17px;
    }

    .page-functionality {
        font-size: 18px;
    }
</style>

<div>
    <h3>Lessons</h3>

    <div class="lesson-list">
        @if (!details.Lessons.Any()) {
            <div class="mt-4 mb-4">There're no lessons yet...</div>
        }
        else {
            @foreach (var lesson in details.Lessons)
            {
                <div class="lesson-list-item" id="@lesson.Id">
                    <div class="container mt-5">
                        <div class="card">
                            <div class="card-header">
                                <h5 class="card-title fs-3">@lesson.Name</h5>
                            </div>
                            <div class="card-body">
                                <p class="card-text fs-4">@lesson.AuthorName</p>
                                <p class="card-text">@lesson.Description</p>
                                <a href="@lesson.VideoUrl" class="btn btn-dark px-3 btn btn-primary">Watch Video</a>
                                @if(isAuthenticated && ((isAuthor && authenticatedUser.Id == lesson.UserId) || isAdmin))
                                {
                                    <a href="#" onclick="DeleteLessonHandler(@lesson.Id)" class="text-danger">Delete</a> 
                                } 
                            </div>
                            <div class="card-footer text-muted">
                                @lesson.Timestamp
                            </div>
                        </div>
                    </div>
                </div>

                <hr>
            }
        }
        @if (isAuthenticated && (isAuthor || isAdmin))
        {
            <a asp-route="CreateLessonView" asp-route-courseId="@details.Course.Id" class="btn-dark px-3 btn btn-primary mb-4">Create Lesson</a>
        }
    </div>

    <h3>Feedbacks</h3>
    @if (!details.Feedbacks.Any()) {
            <div>There're no feedbacks yet...</div>
        }
    <div class="feedbacks-page">

    <hr>
        <div class="feedbacks-list mb-5">
            @foreach (var feedback in details.Feedbacks)
            {
                <div class="list-item mb-4" id="@feedback.Id" >
                    <div class="info-wrapper d-flex justify-content-between align-items-center">

                        <div class="item-text-info">
                            <div class="item-username h4 mb-3">
                                @feedback.Username
                            </div>

                            <div class="item-text mb-4">
                                @(feedback.Text)
                            </div>

                            <div class="item-date mb-2">
                                @(feedback.CreationDate)
                            </div>
                        </div>

                        <div class="item-rating-info">
                            @(feedback.Rating ?? 0)/5
                        </div>
                    </div>
                    @if(isAuthenticated && ((isAuthor && authenticatedUser.Id == feedback.UserId) || isAdmin))
                    {
                        <div class="item-functionality">
                            <a href="#" onclick="DeleteFeedbackHandler(@feedback.Id)" class="text-danger">Delete</a> 
                            <a href="/Feedback/Edit/@feedback.Id" class="text-dark">Edit</a>
                        </div>
                    }
                </div>
            }
        </div>

        @if ((isAuthor || isAdmin) && authenticatedUser?.IsMuted == false)
        {
            <div class="page-functionality">
                <a asp-controller="Feedback" asp-action="Create" asp-route-courseId="@details.Course.Id" class="btn btn-dark px-3 btn-lg">Create Feedback</a>
            </div>
        }
    </div>
</div>

@section Scripts{
    <script> 
        function DeleteFeedbackHandler(feedbackId) {
            fetch('/Feedback/' + feedbackId, { method: 'DELETE' })
                .then((response) => {
                    if (!response.ok)
                        throw new Error(response.statusText)

                    DeleteFeedbackFromDOM(feedbackId)
                    console.log("Feedback was successfully deleted!")
                })
                .catch((err) => console.log(err.message));
        }

        function DeleteFeedbackFromDOM(feedbackId) {
            var feedbacksList = document.querySelector('.feedbacks-list')
            var feedback = feedbacksList.querySelector('#' + CSS.escape(feedbackId))

            feedback.remove()
        }

        function DeleteLessonHandler(lessonId) {
            console.log(lessonId)
            fetch('/Lesson/' + lessonId, { method: 'DELETE' })
                .then((response) => {
                    if (!response.ok)
                        throw new Error(response.statusText)

                    DeleteLessonFromDOM(lessonId)
                    console.log("Lesson was successfully deleted!")
                })
                .catch((err) => console.log(err.message));
        }

        function DeleteLessonFromDOM(lessonId) {
            var lessonList = document.querySelector('.lesson-list')
            var lesson = lessonList.querySelector('#' + CSS.escape(lessonId))

            lesson.remove()
        }
    </script>
}
